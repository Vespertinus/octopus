-*- mode: org -*-

* Введение
  octopus - дальнейшее развитие идеи silverbox/tarantool, фреймворк
  для создание in-memory баз данных.

  В комплекте идет с двумя модулями feeder и box. Первый необходим для
  репликации, второй - key-value хранилище.

  Пример конфигурации - doc/example.cfg

  Запуск:
  ./octopus -c doc/example.cfg --init-storage # инициализируем хранилище
  ./octopus -c doc/example.cfg # запускаем сервер


* Клиенты
** client/libiproto
    Клиентская библиотека протокола iproto
** client/octobench
    Бенчмарк для mod/box (silverbox)
** ruby клиент для mod/box
*** пример сессии
     $ irb -I mod/box/client/ruby -r silverbox
     irb(main):001:0> s = SilverBox.new '0:33013'
     => #<SilverBox:0x000000025a3438 @object_space=0, @end_point=["0", 33013], @reconnect=true, @sock=#<TCPSocket:fd 4>>
     irb(main):002:0> s.ping
     => :pong
     irb(main):003:0> s.insert [1, "foo", "bar"]
     => 1
     irb(main):004:0> s.select 1 
     => [["\x01\x00\x00\x00", "foo", "bar"]]

* Репликация.
**   Основные настройки: 
      1) wal_feeder_addr - адрес, откуда получаем данные.
      2) wal_feeder_filter - название фильтра. Фильтр - луа процедура, которая 
         определена на мастере.

** Фильтры
    Фильтр - луа функция, котороя посторочно получает данные
    репликации и может их изменять.  Фильтр должен быть
    зарегистрирован в таблице replication_filter, простейщий способ -
    создавать функции с именем вида replication_filter.имя_фильтра.
    
    Аргумент фильтра - FFI строка представляющая запись из снапшота
    или WAL. Функция crow(string) приводит такую строку к структуре
    row_v12 .

    Фильтр должен вернуть либо строку либо nil. В последнем случае
    строка реплике не передается. Обратите внимание, что в этом
    случае будут дырки SCN, соответсвенно на реплике надо отключить
    опцию конфигурации panic_on_scn_gap .


    Пример фильтра можно посмотреть в mod/feeder/src-lua/feeder.lua и
    test/07_test_replication.rb

** Переключение на ходу.
    Возможно изменение источника репликации на ходу: правим конфиг +
    reload conf в админ. интерфейс.

    Никаких проверок реплика не делает, она просто начинает репликацию
    с нового адреса используя SCN на единцу больший чем ее
    собственный.  Соответсвенно, если новый мастер имеет, например,
    другие настройки object_space то все сломается.
      
    Переключение обратно на старый мастер тоже надо делать с
    осторожностью: если в нем будут несовместимые апдейты (которые
    могли появится _после_ того, как реплику переключили на временный
    мастер), то все сломается.
